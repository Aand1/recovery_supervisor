#!/usr/bin/python

import sys
import rosbag

if __name__ == '__main__':

    if len(sys.argv) < 2:
        print "Usage: get_list_of_recoveries bag_file [output_file]"

    else:
        bag = rosbag.Bag(sys.argv[1])

        if len(sys.argv) == 3:
            output_file = open(sys.argv[2], 'w')

        goal_start = 0
        last_goal_id = None
        current_goal_id = None
        total_demos = 0
        trips = {}
        for topic, msg, t in bag.read_messages():
            if topic == 'demo':
                total_demos += 1
            if topic == 'nav_points/goal_id':
                current_goal_id = msg.data
                goal_start = t
            elif topic == 'goals_reached':
                trip_time = (t - goal_start).to_sec()
                if last_goal_id is not None:
                    trip = (last_goal_id, current_goal_id)
                    if trip in trips:
                        if 'times' in trips[trip]:
                            trips[trip]['times'].append(trip_time)
                        else:
                            trips[trip]['times'] = [trip_time]
                    else:
                        trips[trip] = {'times': [trip_time]}
                if current_goal_id is not None:
                    last_goal_id = current_goal_id
            elif topic == '/recovery_supervisor/recovery_locations':
                x = msg.pose_stamped.pose.position.x
                y = msg.pose_stamped.pose.position.x
                recovery = (msg.index, x, y)
                trip = (last_goal_id, current_goal_id)
                if trip in trips:
                    if 'recoveries' in trips[trip]:
                        trips[trip]['recoveries'].append(recovery)
                    else:
                        trips[trip]['recoveries'] = [recovery]
                else:
                    trips[trip] = {'recoveries': [recovery]}

        total_time = 0
        total_recoveries = 0
        for trip in trips:
            if 'times' in trips[trip]:
                if 'recoveries' in trips[trip]:
                    r = len(trips[trip]['recoveries'])
                    total_recoveries += r
                else:
                    r = 0
                l = len(trips[trip]['times'])
                s = sum(t for t in trips[trip]['times'])
                average_time = s/l
                total_time += s
                print "from {:2d} to {:2d} in {:5.2f} sec with {:2d} recoveries".format(trip[0], trip[1], average_time, r)

        print "total trips:", len(trips)
        print "total time (hours): %.2f" % (total_time/3600.0)
        print "total recoveries:", total_recoveries
        print "total demos:", total_demos

        bag.close()

